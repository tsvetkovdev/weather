{"version":3,"sources":["Components/WeatherCard/WeatherCard.jsx","Components/Loader/Loader.js","Components/Wrapper/Wrapper.jsx","Components/WeatherDetails/WeatherDetails.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","padding","spacing","paper","margin","maxWidth","backgroundColor","cardBlock","display","card","justifyContent","cardLine","alignItems","button","fontSize","icon","paddingLeft","buttonDelete","color","link","textDecoration","name","ColorButton","withStyles","palette","getContrastText","green","Button","WeatherCard","weatherCard","id","classes","useState","weatherListCard","setWeatherListCard","API_KEY","a","fetch","res","json","data","weather","iconColor","weatherIcon","refetchData","FetchData","main","faCloud","faCloudRain","faSnowflake","faSun","faSmog","className","Paper","Grid","container","item","temp","IconButton","aria-label","onClick","onDelete","index","to","variant","Loader","breakpoints","down","height","borderRadius","form","width","textAlign","title","input","Wrapper","citiesArray","localStorage","getItem","JSON","parse","setItem","stringify","cities","setCities","weatherList","setWeatherList","cityName","setCityName","alertStateForAlreadyAdded","setalertStateForAlreadyAdded","alertStateForNonExistent","setalertStateForNonExistent","useForm","register","handleSubmit","vertical","horizontal","list","checkCity","find","setStates","Alert","props","elevation","useEffect","tempWeather","splice","tempCities","addCity","document","getElementById","value","FetchCityWeather","sm","onSubmit","TextField","ref","label","onChange","e","target","Snackbar","anchorOrigin","open","autoHideDuration","onClose","severity","map","cardParent","cardChild","bottom","paddingTop","wrapper","loader","WeatherDetails","weatherId","weatherDetails","setWeatherDetails","setWeatherIcon","setIconColor","deg","setDeg","time","setTime","match","params","wind","chooseIconAndGetTime","Date","getUTCHours","timezone","faMoon","getMinutes","feels_like","humidity","style","transform","faArrowUp","speed","App","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.4564686e.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faSun, faCloud, faPooStorm, faCloudRain, faCloudSun, faCloudSunRain, faCloudShowersHeavy, faCloudMoonRain, faCloudMeatball, faSnowflake, faCloudMoon, faMoon, faSmog} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    margin: \"auto\",\r\n    maxWidth: 500,\r\n    backgroundColor: 'cadetblue'\r\n  },\r\n  cardBlock: {\r\n    display: \"block\",\r\n    \r\n  },\r\n  card: {\r\n    justifyContent: \"space-between\",\r\n    padding: \"5px\",\r\n  },\r\n  cardLine: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    fontSize: \"10px\",\r\n    backgroundColor: 'dimgrey',\r\n    '&:hover':{\r\n      backgroundColor: 'green'\r\n    }\r\n    \r\n  },\r\n  icon: {\r\n    paddingLeft: '10px',\r\n    fontSize: '24px'\r\n  },\r\n\r\n  buttonDelete: {\r\n    color: \"crimson\",\r\n  },\r\n  link: {\r\n    textDecoration: 'none'\r\n  },\r\n  name: {\r\n    fontSize: '20px'\r\n  }\r\n}));\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(green[500]),\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\n\r\n\r\nfunction WeatherCard(weatherCard) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [weatherListCard, setWeatherListCard] = useState(weatherCard);\r\n  \r\n  const API_KEY = \"69237bcd47ff54fb3b8740cfde008960\";\r\n  let id;\r\n\r\n  \r\n \r\n  \r\n\r\n  async function FetchData() {\r\n    const res = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${API_KEY}&units=metric`\r\n    );\r\n    const data = await res.json();\r\n   \r\n    setWeatherListCard({ weather: data });\r\n    \r\n    \r\n   \r\n  }\r\n\r\n  \r\n\r\n  \r\n  const refetchData = () => {\r\n    id = weatherListCard.weather.id;\r\n    FetchData();\r\n    \r\n  };\r\n  let iconColor;\r\n  let weatherIcon;\r\n  \r\n  const arr = weatherListCard.weather.weather\r\n  switch(arr[0].main) {\r\n    case 'Clouds':\r\n       weatherIcon = faCloud;\r\n       iconColor = 'lightgray';\r\n       break;\r\n    case 'Rain': \r\n      weatherIcon = faCloudRain;\r\n      iconColor = 'gray'\r\n      break;\r\n    case 'Snow': \r\n      weatherIcon = faSnowflake;\r\n      iconColor = 'white'\r\n      break;\r\n    case 'Clear':\r\n      weatherIcon = faSun \r\n      iconColor = 'yellow'\r\n      \r\n      break;\r\n    case 'Mist':\r\n      weatherIcon = faSmog;\r\n      iconColor = 'gray';\r\n  }\r\n  \r\n  \r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container className={classes.cardBlock}>\r\n          <Grid container className={classes.card}>\r\n            <Grid item className={classes.cardLine}>\r\n            <Grid item className={classes.name}>{weatherListCard.weather.name}</Grid>\r\n           <FontAwesomeIcon className={classes.icon} icon={weatherIcon} color={iconColor}/>\r\n           </Grid>\r\n            <Grid item className={classes.cardLine}>\r\n              <Grid item className={classes.name}>{weatherListCard.weather.main.temp} C°</Grid>\r\n              <IconButton  aria-label=\"delete\" className={classes.buttonDelete} onClick={() => (weatherCard.onDelete(weatherCard.index))} >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.card}>\r\n            <NavLink to={'/Details/' + weatherListCard.weather.id} className={classes.link}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              \r\n            >\r\n              Детальнее\r\n            </Button>\r\n            </NavLink>\r\n            <ColorButton\r\n              className={classes.button}\r\n              onClick={() => refetchData()}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Обновить данные о погоде\r\n            </ColorButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport WeatherCard from '../WeatherCard/WeatherCard';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loader from '../Loader/Loader'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .MuiInputLabel-outlined':{\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: '12px'\r\n        \r\n      },\r\n    },\r\n    '& .MuiButton-root':{\r\n      fontSize: '12px'\r\n    },\r\n    height: '100vh',\r\n    \r\n    padding: theme.spacing(15),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(6),\r\n      \r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3),\r\n      \r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    \r\n   \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    backgroundColor: 'rgb(230, 238, 255)',\r\n    borderRadius: '10px'\r\n  },\r\n  cardBlock: {\r\n    display: 'block'\r\n  },\r\n  card: {\r\n    justifyContent: 'space-around'\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    padding: '16px'\r\n  },\r\n  title: {\r\n    width: '100%',\r\n    margin: '30px',\r\n    fontSize: '28px',\r\n    \r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: '100%',\r\n    textAlign: 'center',\r\n    \r\n    \r\n\r\n  },\r\n  \r\n  \r\n \r\n}));\r\n\r\n\r\n\r\n\r\n \r\n\r\nfunction Wrapper() {\r\n\r\n  const classes = useStyles();\r\n  let citiesArray = [524901, 703448, 264374]\r\n  const AddLocalStorage = () => {\r\n    localStorage.setItem('weather', JSON.stringify(citiesArray))\r\n  }\r\n\r\n  if (localStorage.getItem('weather')) {\r\n    citiesArray = JSON.parse(localStorage.getItem('weather'))\r\n  }\r\n  else AddLocalStorage()\r\n  const [cities, setCities] = useState(JSON.parse(localStorage.getItem('weather')))\r\n  const [weatherList, setWeatherList] = useState([])\r\n  const [cityName, setCityName] = useState('')\r\n  const [alertStateForAlreadyAdded, setalertStateForAlreadyAdded] = useState(false)\r\n\r\n  const [alertStateForNonExistent, setalertStateForNonExistent] = useState(false)\r\n  const { register, handleSubmit } = useForm();\r\n  \r\n  \r\n\r\n  const API_KEY = '69237bcd47ff54fb3b8740cfde008960'\r\n  const position = {\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  }\r\n\r\n  const { vertical, horizontal} = position;\r\n\r\n  useEffect(() => {\r\n      \r\n    FetchData()\r\n    \r\n  },[])\r\n  \r\n\r\n\r\n  \r\n    useEffect(()=>{\r\n      localStorage.setItem('weather',JSON.stringify(cities))\r\n    }, [cities])\r\n   \r\n  \r\n\r\n  \r\n\r\n  async function FetchData() {\r\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/group?id=${cities}&appid=${API_KEY}&units=metric`)\r\n    const data = await res.json()\r\n    setWeatherList(data.list)\r\n   \r\n    \r\n  }\r\n\r\n\r\n  async function FetchCityWeather() {\r\n   \r\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`)\r\n    const data = await res.json() \r\n\r\n    const checkCity = () => {\r\n     return weatherList.find(weather => (weather.name === data.name)) ? false : true;\r\n     }\r\n   \r\n    const setStates = () => {\r\n      setWeatherList([...weatherList, data]) \r\n      setCities([...cities, data.id])\r\n    }\r\n\r\n    data.weather ? (checkCity() ? setStates() : setalertStateForAlreadyAdded(true) ) : setalertStateForNonExistent(true)\r\n    \r\n    \r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const onDelete = (id) => {\r\n    const tempWeather = [...weatherList]\r\n    tempWeather.splice(id, 1)\r\n    setWeatherList(tempWeather)\r\n    const tempCities = [...cities]\r\n    tempCities.splice(id, 1)\r\n    setCities(tempCities)\r\n    \r\n  }\r\n  \r\n  const addCity = () => {\r\n    document.getElementById('outlined-basic').value= '';\r\n    FetchCityWeather()\r\n  }\r\n\r\n \r\n\r\n  \r\n \r\n  \r\n  \r\n  \r\n  \r\n\r\n \r\n \r\n   \r\n\r\n \r\n  return (\r\n    <div className={classes.root} >\r\n      <Paper className={classes.paper}>\r\n       \r\n      \r\n\r\n        <Grid container >\r\n        \r\n        <span className={classes.title}>Погода в разных городах мира</span>\r\n        <Grid item className={classes.form} >\r\n       \r\n        <Grid item  sm={9}>\r\n        <form onSubmit={handleSubmit(addCity)}>\r\n        <TextField className={classes.input} ref={register} id=\"outlined-basic\" label=\"Введите название города\" variant=\"outlined\" onChange={e => (setCityName(e.target.value))}/>\r\n        </form>\r\n        </Grid>\r\n        <Grid item   >\r\n        <Button className={classes.input} variant=\"contained\" color=\"primary\" onClick={() => (addCity())} >Узнать погоду</Button>\r\n        </Grid>\r\n       \r\n        <Snackbar anchorOrigin={{ vertical, horizontal }} open={alertStateForAlreadyAdded} autoHideDuration={6000} onClose={()=>{setalertStateForAlreadyAdded(false)}} key={vertical + horizontal}>\r\n        <Alert onClose={()=>{setalertStateForAlreadyAdded(false)}} severity=\"info\">\r\n          Вы уже добавили этот город\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar anchorOrigin={{ vertical, horizontal }} open={alertStateForNonExistent} autoHideDuration={6000} onClose={()=>{setalertStateForNonExistent(false)}} key={vertical + horizontal}>\r\n        <Alert onClose={()=>{setalertStateForNonExistent(false)}} severity=\"warning\">\r\n          Такого города не существует\r\n        </Alert>\r\n        </Snackbar>\r\n\r\n\r\n        </Grid>\r\n        {weatherList ?\r\n        weatherList.map((weather, index) => (<WeatherCard key={weather.id} setCities={setCities} onDelete={onDelete} index={index}  weather={weather}/>))\r\n        : \r\n        <Loader />\r\n      }\r\n          \r\n          \r\n          \r\n        </Grid>\r\n      \r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper\r\n","import React,{useState, useEffect} from 'react'\r\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faSun, faCloud, faPooStorm, faCloudRain, faCloudSun, faCloudSunRain, faCloudShowersHeavy, faCloudMoonRain, faCloudMeatball, faSnowflake, faCloudMoon, faMoon, faSmog, faArrowUp } from '@fortawesome/free-solid-svg-icons'\r\nimport Loader from '../Loader/Loader';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '20px',\r\n      padding: '10px',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    margin: \"auto\",\r\n    maxWidth: '600px',\r\n    backgroundColor: 'rgba(200, 200, 200, 0.5)'\r\n  },\r\n  cardBlock: {\r\n    display: \"block\",\r\n    \r\n  },\r\n  cardParent: {\r\n    display: 'inline-block',\r\n    padding: \"5px\",\r\n    fontSize: '18px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '15px',\r\n    },\r\n  },\r\n  cardChild: {\r\n    display: 'inline-block',\r\n   bottom: '0'\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n   \r\n  },\r\n  name: {\r\n    fontSize: '24px'\r\n  },\r\n  \r\n  icon: {\r\n    fontSize: '100px',\r\n    paddingTop: '10px',\r\n    paddingLeft: '10px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '60px'\r\n      \r\n    },\r\n  },\r\n  title: {\r\n    display: 'inline-block',\r\n    padding: '10px',\r\n    \r\n  },\r\n  wrapper: {\r\n    padding: '10px',\r\n    justifyContent: 'space-around'\r\n  },\r\n  loader: {\r\n    textAlign: 'center',\r\n  },\r\n  \r\n}));\r\n\r\n\r\nfunction WeatherDetails(weatherId) {\r\n  \r\n\r\n \r\n  const [weatherDetails, setWeatherDetails] = useState();\r\n  const [weatherIcon, setWeatherIcon] = useState(faSun);\r\n  const [iconColor, setIconColor] = useState('yellow');\r\n  const [deg, setDeg] = useState()\r\n  const [time, setTime] = useState()\r\n  const id = weatherId.match.params.name\r\n  const API_KEY = \"69237bcd47ff54fb3b8740cfde008960\";\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n  FetchData()\r\n  },[])\r\n\r\n //fffffffffffffffffffffffffffffffffff\r\n  async function FetchData() {\r\n  const res = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${API_KEY}&units=metric`\r\n  );\r\n\r\n  const data = await res.json();\r\n \r\n  setWeatherDetails(data);\r\n  setDeg(data.wind.deg)\r\n  chooseIconAndGetTime(data)\r\n  }\r\n  \r\n \r\n  \r\n  const chooseIconAndGetTime = (data) => {\r\n    let date = new Date(); \r\n    const currentUTC = date.getUTCHours();\r\n    const time = currentUTC + data.timezone/3600\r\n    time > 23 ? setTime(time -24) : setTime(time)\r\n    const arr = data.weather[0].main\r\n    switch(arr) {\r\n      case 'Clouds':\r\n        setWeatherIcon(faCloud)\r\n        setIconColor('lightgray')\r\n         break;\r\n      case 'Rain': \r\n      setWeatherIcon(faCloudRain)\r\n      setIconColor('gray')\r\n        break;\r\n      case 'Snow': \r\n      setWeatherIcon(faSnowflake)\r\n      setIconColor('white')\r\n        break;\r\n      case 'Clear':\r\n        (time > 5 && time <18) ? setWeatherIcon(faSun) : setWeatherIcon(faMoon);\r\n        (time > 5 && time <18) ? setIconColor('yellow') : setIconColor('darkblue')\r\n        \r\n        break;\r\n      case 'Mist':\r\n        setWeatherIcon(faSmog)\r\n        setIconColor('gray')\r\n    }\r\n    \r\n  }\r\n\r\n  const getMin = () => {\r\n    let date = new Date(); \r\n    const currentMin = date.getMinutes();\r\n   \r\n    return(currentMin)\r\n    \r\n  }\r\n \r\n  //fffffffffffffffffffffffffffffffffff\r\n \r\n\r\n  \r\n  \r\n \r\n    return(\r\n\r\n    <div className={classes.root}>\r\n      \r\n      <Paper className={classes.paper}>\r\n      \r\n        {weatherDetails \r\n        ? \r\n        \r\n        <Grid container className={classes.wrapper}>\r\n         \r\n        \r\n          <Grid item className={classes.title} sm={6} >\r\n          <Grid item className={classes.name}>{weatherDetails.name} </Grid>\r\n          <FontAwesomeIcon className={classes.icon} icon={weatherIcon} color={iconColor}/>\r\n          </Grid>\r\n       \r\n\r\n\r\n        <Grid item  className={classes.cardParent} sm={6}  >\r\n          <Grid container className={classes.cardChild}>\r\n           <Grid item >Время: {time}:{getMin()}</Grid>\r\n           <Grid item >Температура воздуха: {weatherDetails.main.temp} C°</Grid>\r\n           <Grid item >Ощущается как: {weatherDetails.main.feels_like} C°</Grid>\r\n           <Grid item >Влажность: {weatherDetails.main.humidity} %</Grid>\r\n           <Grid item >Ветер: <FontAwesomeIcon style={{transform: `rotate(${deg}deg)`}}  icon={faArrowUp} /> {weatherDetails.wind.speed}km/h</Grid>\r\n        </Grid>\r\n        </Grid>\r\n       <Grid item className={classes.button}>\r\n      <NavLink className={classes.link} to={'/weather/'}>\r\n      <Button>Вернуться к списку городов</Button>\r\n      </NavLink>\r\n      </Grid>\r\n     </Grid>\r\n    : \r\n    <Grid item className={classes.loader}>\r\n    <Loader />\r\n    </Grid>\r\n    }\r\n      </Paper>\r\n    </div> \r\n    \r\n    )\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React from 'react'\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom'\nimport Wrapper from './Components/Wrapper/Wrapper';\nimport WeatherDetails from './Components/WeatherDetails/WeatherDetails'\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n     <Switch>\n      <Route path='/Details/:name' component={WeatherDetails}/>\n      <Route path='/weather/' component={Wrapper}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>  \n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}